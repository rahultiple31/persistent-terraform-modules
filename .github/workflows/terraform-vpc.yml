name: Terraform VPC ‚Äî Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment to deploy"
        required: true
        type: choice
        options:
          - dev
          - qa
          - prod
      action:
        description: "Select Terraform action"
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy

permissions:
  contents: read
  id-token: write
  actions: read

concurrency:
  group: terraform-vpc-${{ github.event.inputs.environment }}
  cancel-in-progress: true

env:
  AWS_REGION: eu-west-1
  TF_VERSION: 1.5.0

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üìÅ Set working directory and state key
        id: vars
        run: |
          ENV_NAME=${{ github.event.inputs.environment }}
          ACTION=${{ github.event.inputs.action }}
          # WORKDIR relative to repo root
          WORKDIR="infrastructure/${ENV_NAME}/vpc"
          STATE_KEY="state/${ENV_NAME}/vpc/terraform.tfstate"

          echo "ENV_NAME=${ENV_NAME}" >> $GITHUB_ENV
          echo "ACTION=${ACTION}" >> $GITHUB_ENV
          echo "WORKDIR=${WORKDIR}" >> $GITHUB_ENV
          echo "STATE_KEY=${STATE_KEY}" >> $GITHUB_ENV

      - name: üß± Terraform Init (S3 backend)
        working-directory: ${{ env.WORKDIR }}
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=${{ env.STATE_KEY }}" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="encrypt=true"

      - name: üß© Terraform Format & Validate
        working-directory: ${{ env.WORKDIR }}
        run: |
          # Ignore exit code 3 from fmt -check to prevent workflow failure
          terraform fmt -check || true
          terraform fmt
          terraform validate

      - name: üßÆ Terraform Plan / Apply / Destroy
        working-directory: ${{ env.WORKDIR }}
        run: |
          PLAN_FILE="plan-${{ env.ENV_NAME }}.tfplan"

          if [ "${{ env.ACTION }}" == "plan" ]; then
            echo "üìÑ Running terraform plan..."
            terraform plan -input=false -out="${PLAN_FILE}"
            terraform show -no-color "${PLAN_FILE}" > "${PLAN_FILE}.txt"
            echo "‚úÖ Plan complete. Artifact generated."

          elif [ "${{ env.ACTION }}" == "apply" ]; then
            if [ "${{ env.ENV_NAME }}" == "prod" ]; then
              echo "‚è∏Ô∏è Manual approval required for PROD apply. Approve the job in GitHub UI."
            fi
            terraform apply -input=false -auto-approve "${PLAN_FILE}"
            echo "‚úÖ Apply complete."

          elif [ "${{ env.ACTION }}" == "destroy" ]; then
            if [ "${{ env.ENV_NAME }}" == "prod" ]; then
              echo "‚è∏Ô∏è Manual approval required for PROD destroy. Approve the job in GitHub UI."
            fi
            terraform destroy -input=false -auto-approve
            echo "‚úÖ Destroy complete."

          else
            echo "‚ùå Invalid action: ${{ env.ACTION }}"
            exit 1
          fi

      - name: üì§ Upload Plan Artifact (only for plan)
        if: ${{ env.ACTION == 'plan' }}
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan-${{ env.ENV_NAME }}
          path: |
            ${{ env.WORKDIR }}/plan-${{ env.ENV_NAME }}.tfplan
            ${{ env.WORKDIR }}/plan-${{ env.ENV_NAME }}.tfplan.txt
